<?xml version="1.0" encoding="UTF-8"?>
<!-- debug：打印logback内部日志信息，实时查看logback的运行状态，默认为false -->
<!-- scan：配置文件如果发生改变，是否被重新加载，默认为true。 -->
<!-- scanPeriod：设置检测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒，默认的时间间隔为1分钟，默认为true。 -->
<configuration debug="true" scan="true" scanPeriod="30 seconds">

    <!-- console专用 日志内容输出格式 -->
    <property name="PATTERN-CONSOLE"
              value="%-12(%d{yyyy-MM-dd HH:mm:ss.SSS}) %highlight(|-%-5level) [%thread] [%X{URL}] [%X{IP}] [%X{SESSION_ID}] %c %cyan([%L-]) | %msg%n"/>
    <!--文件中使用的格式-->
    <property name="PATTERN-FILE" value="%-12(%d{yyyy-MM-dd HH:mm:ss.SSS}) |-%-5level [%thread] %c [%L-] | %msg%n"/>


    <!-- 时间戳定义，timeReference：使用日志产生日期为时间基准 -->
    <timestamp key="byDay" datePattern="yyyy-MM-dd" timeReference="contextBirth"/>

    <!-- test文件路径 -->
    <property name="TEST_FILE_PATH" value="d:/opt/roncoo/test/logs"/>
    <!-- pro文件路径 -->
    <property name="PRO_FILE_PATH" value="d:/opt/roncoo/prod/logs"/>

    <!-- 开发环境 -->
    <springProfile name="dev">
        <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>${PATTERN-CONSOLE}</pattern>
            </encoder>
        </appender>
        <!-- Appender 1 , 按照每天生成日志文件 -->
        <appender name="LOGE-FILE-ALL" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <!-- 日志输出文件 -->
            <file>${TEST_FILE_PATH}/logback-${byDay}.log</file>
            <!-- 追加日志到原文件结尾 -->
            <append>true</append>
            <!-- timebasedrollingpolicy：演示时间和大小为基础的日志文件归档 -->
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <!-- 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定。 -->
                <!--可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。 -->
                <!--而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
                <!-- 文件滚动日期格式：每天：.YYYY-MM-dd（默认）；每星期：.YYYY-ww；每月：.YYYY-MM -->
                <!-- 每隔半天：.YYYY-MM-dd-a；每小时：.YYYY-MM-dd-HH；每分钟：.YYYY-MM-dd-HH-mm -->
                <fileNamePattern>${TEST_FILE_PATH}/log-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
                <!-- 控制归档文件的最大数量的保存，删除旧的文件，默认单位天数 -->
                <maxHistory>7</maxHistory>
                <!-- 设置当前日志的文件的大小，决定日志翻滚 -->
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <!-- 除按日志记录之外，还配置了日志文件不能超过10M(默认)，若超过10M，日志文件会以索引0开始， -->
                    <maxFileSize>10MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
            <encoder>
                <pattern>${PATTERN-FILE}</pattern>
            </encoder>
        </appender>
        <!--Appender 2 只留下info级别的日志-->
        <appender name="LOG-FILE-INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <!-- 这里添加一个过滤器 -->
            <file>${TEST_FILE_PATH}/logback-info.log</file>
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>INFO</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${TEST_FILE_PATH}/log-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
                <maxHistory>7</maxHistory>
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <maxFileSize>10MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
            <encoder>
                <pattern>${PATTERN-FILE}</pattern>
            </encoder>
        </appender>

        <!--appender 3 只留下error级别的日志-->
        <appender name="LOG-FILE-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <!-- 这里添加一个过滤器 -->
            <file>${TEST_FILE_PATH}/logback-error.log</file>
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>ERROR</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${TEST_FILE_PATH}/log-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
                <maxHistory>7</maxHistory>
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <maxFileSize>10MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
            <encoder>
                <pattern>${PATTERN-FILE}</pattern>
            </encoder>
        </appender>

        <!-- 指定一个包，name必填，additivity选填：控制是否继承父类appender，默认true -->
        <!-- level选填，如果木有指定从最近的父类继承，顶级为root的级别 -->
        <logger name="com.dynamic.springbootlogback" level="debug" additivity="true">
            <!--将会从父类 或者顶级的root继承到这个appender,可不写-->
            <!--<appender-ref ref="CONSOLE" />-->
            <appender-ref ref="LOGE-FILE-ALL"/>
            <appender-ref ref="LOG-FILE-INFO"/>
            <appender-ref ref="LOG-FILE-ERROR"/>
        </logger>

        <root level="info">
            <appender-ref ref="CONSOLE"/>
        </root>

    </springProfile>

    <!-- 测试环境 -->
    <springProfile name="test">
        <!-- 每天产生一个文件 -->
        <appender name="TEST-FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <!-- 文件路径 -->
            <file>${TEST_FILE_PATH}</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <!-- 文件名称 -->
                <fileNamePattern>${TEST_FILE_PATH}/info.%d{yyyy-MM-dd}.log</fileNamePattern>
                <!-- 文件最大保存历史数量 -->
                <MaxHistory>100</MaxHistory>
            </rollingPolicy>

            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>${PATTERN}</pattern>
            </layout>
        </appender>

        <root level="info">
            <appender-ref ref="TEST-FILE"/>
        </root>
    </springProfile>

    <!-- 生产环境 -->
    <springProfile name="prod">
        <appender name="PROD_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${PRO_FILE_PATH}</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${PRO_FILE_PATH}/warn.%d{yyyy-MM-dd}.log</fileNamePattern>
                <MaxHistory>100</MaxHistory>
            </rollingPolicy>
            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>${PATTERN}</pattern>
            </layout>
        </appender>
        <logger name="com.dynamic.springbootlogback" level="info"/>
        <root level="warn">
            <appender-ref ref="PROD_FILE"/>
        </root>
    </springProfile>
</configuration>
